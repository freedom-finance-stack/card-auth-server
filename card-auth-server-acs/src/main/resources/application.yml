# use while deployment -Dspring.profiles.active=local This will load the application.properties and the application-local.properties with the latter overriding properties from the first.
app:
  port: 8080
  hostname: https://cas_acs/
  acs:
    referenceNumber: "12345678901234567890"
    operatorId:
      visa: 123456789012345
      mastercard: 123456789012345
      amex: 123456789012345
    timeout:
      challengeRequest: 30 #sec
      challengeCompletion: 180 #sec

gateway:
  ds:
    mock: false
    services:
      VISA_DS:
        url: https://simulator-mutual-3ds.selftestplatform.com/v2.2.0/ds/4401
        useSSL: true
        connectTimeout: 5000
        responseTimeout: 5000
        keyStore:
          path: ${VISA_DS_KEYSTORE_PATH:/Users/jaydeep.radadiya/Downloads/crt/cert.p12}
          password: ${VISA_DS_KEYSTORE_KEY_IDENTIFIER:ffsAcsPassword}
        trustStore:
          srcPath: /Users/jaydeep.radadiya/Downloads/crt/ul-ts-3ds-ca.crt
          destPath: /Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib/security/cacerts
          password: ${VISA_DS_KEYSTORE_KEY_IDENTIFIER:changeit}
        retryable:
          maxAttempts: 2
          backOffPeriod: 1000   #ms
      MASTERCARD_DS:
        url: https://simulator-mutual-3ds.selftestplatform.com/v2.2.0/ds/4401
        useSSL: true
        connectTimeout: 5000
        responseTimeout: 5000
        keyStore:
          path: ${MASTERCARD_DS_KEYSTORE_PATH:/Users/jaydeep.radadiya/Downloads/crt/cert.p12}
          password: : ${MASTERCARD_DS_KEYSTORE_KEY_IDENTIFIER:ffsAcsPassword}
        retryable:
          maxAttempts: 2
          backOffPeriod: 1000

spring:
  application:
    name: Card Auth Server ACS
  datasource:
    url: jdbc:mysql://${ACS_MYSQL_HOST:localhost}:${ACS_MYSQL_PORT:3306}/${ACS_MYSQL_DATABASE:cas_acs}
    username: ${ACS_MYSQL_USER:root}
    password: ${ACS_MYSQL_PASSWORD:Mysql@123}
    driverClassName: com.mysql.cj.jdbc.Driver
  jpa:
    showSql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect

management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: [ "health","prometheus", "metrics", "info" ]
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true         # needs security review, secure end point
    prometheus:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
  prometheus:
    metrics:
      export:
        enabled: false
  graphite:
    metrics:
      export:
        enabled: false

logging:
  level:
    org.hibernate.SQL: DEBUG
    org.springframework: INFO
    org.freedomfinancestack: INFO
#    org.hibernate.type.descriptor.sql: TRACE
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

swagger:
  contact-name: Freedom Finance Stack
  contact-mail: contact@freedomfinancestack.org
  app-name: Card Auth Server ACS
  app-description: "Card Auth Server ACS"
  app-version: 1.0.0
  app-license-url: https://www.apache.org/licenses/LICENSE-2.0.html
  app-license: Apache 2.0

springdoc:
  show-actuator: true
  paths-to-match: /**
  packages-to-scan: org.freedomfinancestack.razorpay.cas.acs

hsm:
  enabled_gateway: "NoOpHSM"
  gateway:
    luna:
      ip: "127.0.0.1"
      port: 8080
      timeout: 1

auth-value:
  master-card-acs-key: ${MC_ACS_KEY:B039878C1F96D212F509B2DC4CC8CD1BB039878C1F96D212F509B2DC4CC8CD1B}

task:
  scheduler:
    corePoolSize: 5
    maxPoolSize: 10
    keepAliveTime: 60000 #mili

external-libs:
  security:
    SecurityModuleAWS:
      enabled: false
    SecurityModuleAzure:
      enabled: false
  request-parsing:
    RequestParsingModuleAWS:
      enabled: false

